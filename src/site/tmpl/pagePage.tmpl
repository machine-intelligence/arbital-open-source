{{/* page.tmpl is the base template file for displaying a page. */}}
{{define "base"}}
<!DOCTYPE html>
<html lang="en">
<head>
	<title>{{.Page.Title}} - Zanaduu</title>
	{{template "style"}}
	{{template "scripts"}}
	{{template "angular" .}}
	<script src="/static/js/page.js"></script>
	<script src="/static/js/editPage.js"></script>
	<script>
		// Map of alias -> {pageId, title} object.
		var pageAliases = { {{range .AliasMap}}"{{.FullName}}":{pageId:{{.PageId}}, title:"{{.PageTitle}}"},{{end}} };
		// Map of link alias/id -> true if the page is published.
		var gPageLinks = { {{range $k,$v := .Page.Links}}"{{$k}}": {{$v}},{{end}} };
	</script>
	<script>
		// MainCtrl is for the Page page.
		app.controller("MainCtrl", function($scope, pageService, userService, $compile) {
			$scope.relatedIds = {{.RelatedIds}};
			$scope.questionIds = [];
			$scope.answerIds = [];
			$scope.page = pageService.pageMap["{{.Page.PageId}}"];

			// Set up children pages and question ids.
			$scope.initialChildren = {};
			$scope.initialChildrenCount = 0;
			for (var n = 0; n < $scope.page.Children.length; n++) {
				var id = $scope.page.Children[n].ChildId;
				var page = pageService.pageMap[id];
				if (page.Type === "question") {
					$scope.questionIds.push(id);
				} else if (page.Type === "answer") {
					$scope.answerIds.push(id);
				} else {
					$scope.initialChildren[id] = page;
					$scope.initialChildrenCount++;
				}
			}

			// Sort question ids by likes, but put the ones created by current user first.
			$scope.questionIds.sort(function(id1, id2) {
				var page1 = pageService.pageMap[id1];
				var page2 = pageService.pageMap[id2];
				var ownerDiff = (page2.CreatorId == userService.user.Id ? 1 : 0) -
						(page1.CreatorId == userService.user.Id ? 1 : 0);
				if (ownerDiff != 0) return ownerDiff;
				return page2.LikeScore - page1.LikeScore;
			});

			// Set up parents pages.
			$scope.initialParents = {};
			$scope.initialParentsCount = $scope.page.Parents.length;
			for (var n = 0; n < $scope.initialParentsCount; n++) {
				var id = $scope.page.Parents[n].ParentId;
				$scope.initialParents[id] = pageService.pageMap[id];
			}

			// Question button stuff.
			var $qButton = $(".question-button");
			// Make sure it's always in the top right corner.
			var qButtonIsFixed = false;
			var qButtonInitialY = $qButton.offset().top;
			var qButtonOffsetY = 20;
			$(window).scroll(function(){
				var isFixed = $(window).scrollTop() > (qButtonInitialY - qButtonOffsetY);
				if (isFixed !== qButtonIsFixed) {
					if (!isFixed) {
						$qButton.css("position", "initial");
					} else {
						$qButton.css("position", "fixed").css("top", qButtonOffsetY);
					}
				}
				qButtonIsFixed = isFixed;
			});
		
			// Process question button click.
			$qButton.on("click", function(event) {
				$(document).trigger("new-page-modal-event", {
					modalKey: "newQuestion",
					parentPageId: $scope.page.PageId,
					callback: function(result) {
						if (result.abandon) {
							$scope.$apply(function() {
								$scope.page.ChildDraftId = 0;
							});
						} else if (result.hidden) {
							$scope.$apply(function() {
								$scope.page.ChildDraftId = result.alias;
							});
						} else {
							smartPageReload();
						}
					},
				});
			});

			// Add answers pages.
			var $answersList = $(".answers-list");
			for (var n = 0; n < $scope.answerIds.length; n++){
				var el = $compile("<znd-page page-id='" + $scope.answerIds[n] + "'></znd-page><hr></hr>")($scope);
				$answersList.append(el);
			}

			// Add edit page for the answer.
			if ($scope.page.Type === "question") {
				$scope.answerDoneFn = function(result) {
					if (result.abandon) {
						getNewAnswerId();
					} else if (result.alias) {
						window.location.assign($scope.page.Url + "#page-" + result.alias);
						window.location.reload();
					}
				};

				var createAnswerEditPage = function(newPageId) {
					var page = pageService.pageMap[newPageId];
					page.Type = "answer";
					page.Parents = [{ParentId: $scope.page.PageId, ChildId: newPageId}];
					var el = $compile("<znd-edit-page page-id='" + newPageId +
						"' primary-page-id='" + $scope.page.PageId +
						"' done-fn='answerDoneFn(result)'></znd-edit-page>")($scope);
					$(".new-answer").append(el);
				};
				var getNewAnswerId = function() {
					$(".new-answer").find("znd-edit-page").remove();
					pageService.loadPages([],
						function(data, status) {
							createAnswerEditPage(Object.keys(data)[0]);
						}, function(data, status) {
							console.log("Couldn't load pages: " + loadPagesIds);
						}
					);
				};
				if ($scope.page.ChildDraftId > 0) {
					createAnswerEditPage($scope.page.ChildDraftId);
				} else {
					getNewAnswerId();
				}
			}
		});
	</script>
</head>

<body last-visit="{{.Page.LastVisit}}" ng-app="zanaduu" ng-controller="ZanaduuCtrl">
{{template "navbar" .User}}

{{template "newLinkModal"}}

<!-- This div shows up when the user hovers over an intra-site link. -->
<div id="link-popover-template" hidden>
	<span class="popover-summary"></span>

	<!-- Likes / dislikes and approval voting -->
	<div class="like-span">
		<span class="like-count">JS inserts likes</span>
		<span class="disabled-like glyphicon glyphicon-thumbs-up"></span>
		&nbsp;
		<span class="dislike-count">JS inserts dislikes</span>
		<span class="disabled-dislike glyphicon glyphicon-thumbs-down"></span>
	</div>

	<!-- Answers and probability votes -->
	<div class="vote"></div>
</div>

<!-- This div template is used to create vote divs. -->
<div id="vote-template" class="vote" hidden>
	<div class="bar-background"></div>
	<input class="vote-slider-input" data-slider-id="vote-slider" type="text"/>
	<div class="text-center gray-text">
		<span class="vote-count">0 votes</span> counted
		<span class="my-vote">
			<span class="my-vote-value"></span>
			<a href="#" class="delete-my-vote-link glyphicon glyphicon-remove"></a>
		</span>
	</div>
</div>

<!-- This div is used to create embedded page divs. -->
<div id="embedded-page-template" class="embedded-page" hidden>
	<div>
		<h2>
			<a href="#" class="hide-embedded-page glyphicon glyphicon-triangle-bottom"></a>&nbsp;
			<a href="#" class="embedded-page-title">JS inserts title here</a>
		</h2>
	</div>
	<div class="embedded-page-body">
		<div class="embedded-vote-container"></div>
		<div class="embedded-page-text">JS inserts page text here</div>
	</div>
</div>

<!-- This modal is for asking a new question. -->
<znd-edit-page-modal></znd-edit-page-modal>

<!-- All the page stuff. -->
<div class="primary-page-body-div" ng-controller="MainCtrl">
	<!-- Navigation column -->
	<div class="navigation-column pull-left">
		<!-- Siblings -->
		<div class="panel panel-default" ng-show="relatedIds.length > 0">
			<div class="panel-heading">Related</div>
			<div class="panel-body">
				<znd-likes-page-title page-id="{[{pageId}]}" ng-repeat="pageId in relatedIds"></znd-likes-page-title>
			</div>
		</div>

		<!-- Parents -->
		<div class="panel panel-default" ng-show="initialParentsCount > 0">
			<div class="panel-heading">Parents</div>
			<div class="panel-body">
				<znd-page-tree init-map="initialParents" is-parent-tree="true"></znd-page-tree>
			</div>
		</div>

		<!-- Children -->
		<div class="panel panel-default" ng-show="initialChildrenCount > 0">
			<div class="panel-heading">Children</div>
			<div class="panel-body">
				<znd-page-tree init-map="initialChildren"></znd-page-tree>
			</div>
		</div>

		<!-- Questions -->
		<div class="panel panel-default" ng-show="questionIds.length > 0">
			<div class="panel-heading">Questions</div>
			<div class="panel-body">
				<znd-likes-page-title page-id="{[{pageId}]}" ng-repeat="pageId in questionIds"></znd-likes-page-title>
			</div>
		</div>
		&nbsp;
	</div>

	<!-- Middle column containing the primary page, comments, etc... -->
	<div class="mid-column pull-left">
		<znd-page page-id="{[{page.PageId}]}"></znd-page>
		
		<!-- Answers for a question page -->
		<div class="answers" ng-show="answerIds.length > 0">
			<h1>Answers</h1>
			<div class="answers-list">
			</div>
		</div>

		<!-- New Answer for a question page -->
		<div class="new-answer" ng-show="page.Type === 'question'">
			<h1>Your Answer</h1>
			<!-- zndEditPage is inserted here dynamically when primary page is a question -->
		</div>
	</div>

	<!-- Question button -->
	<div class="question-div pull-left">
		<button type="button" class="question-button btn btn-info" title="Ask a question" ng-show="page.Type != 'question'">
		  <span class="glyphicon glyphicon-question-sign"></span>
			<span class="has-question-draft-icon glyphicon glyphicon-pencil" ng-show="page.ChildDraftId > 0"></span>
		</button>
	</div>

	<div class="clearfix"></div>
</div>

{{template "footer"}}
</body>
</html>
{{end}}
